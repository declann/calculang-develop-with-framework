var A=Object.defineProperty;var a=(r,e)=>A(r,"name",{value:e,configurable:!0});import $ from"../../_npm/exceljs@4.4.0/+esm.js";var j=Object.defineProperty,s=a((r,e)=>j(r,"name",{value:e,configurable:!0}),"u");class k{static{a(this,"m")}static{s(this,"Workbook")}constructor(e){Object.defineProperties(this,{_:{value:e},sheetNames:{value:e.worksheets.map(t=>t.name),enumerable:!0}})}static async load(e){const t=new $.Workbook;return await t.xlsx.load(e),new k(t)}sheet(e,t){const o=typeof e=="number"?this.sheetNames[e]:this.sheetNames.includes(e=`${e}`)?e:null;if(o==null)throw new Error(`Sheet not found: ${e}`);const n=this._.getWorksheet(o);return y(n,t)}}function y(r,{range:e,headers:t}={}){let[[o,n],[c,f]]=b(e,r);const x=t?r._rows[n++]:null;let i=new Set(["#"]);for(let l=o;l<=c;l++){const h=x?p(x.findCell(l+1)):null;let u=h&&h+""||g(l);for(;i.has(u);)u+="_";i.add(u)}i=new Array(o).concat(Array.from(i));const d=new Array(f-n+1);for(let l=n;l<=f;l++){const h=d[l-n]=Object.create(null,{"#":{value:l+1}}),u=r.getRow(l+1);if(u.hasValues)for(let m=o;m<=c;m++){const v=p(u.findCell(m+1));v!=null&&(h[i[m+1]]=v)}}return d.columns=i.filter(()=>!0),d}a(y,"k"),s(y,"extract");function p(r){if(!r)return;const{value:e}=r;if(e&&typeof e=="object"&&!(e instanceof Date)){if(e.formula||e.sharedFormula)return e.result&&e.result.error?NaN:e.result;if(e.richText)return w(e);if(e.text){let{text:t}=e;return t.richText&&(t=w(t)),e.hyperlink&&e.hyperlink!==t?`${e.hyperlink} ${t}`:t}return e}return e}a(p,"x"),s(p,"valueOf");function w(r){return r.richText.map(e=>e.text).join("")}a(w,"v"),s(w,"richText");function b(r=":",{columnCount:e,rowCount:t}){if(r=`${r}`,!r.match(/^[A-Z]*\d*:[A-Z]*\d*$/))throw new Error("Malformed range specifier");const[[o=0,n=0],[c=e-1,f=t-1]]=r.split(":").map(C);return[[o,n],[c,f]]}a(b,"A"),s(b,"parseRange");function g(r){let e="";r++;do e=String.fromCharCode(64+(r%26||26))+e;while(r=Math.floor((r-1)/26));return e}a(g,"C"),s(g,"toColumn");function C(r){const[,e,t]=r.match(/^([A-Z]*)(\d*)$/);let o=0;if(e)for(let n=0;n<e.length;n++)o+=Math.pow(26,e.length-n-1)*(e.charCodeAt(n)-64);return[o?o-1:void 0,t?+t-1:void 0]}a(C,"$"),s(C,"fromCellReference");export{k as Workbook};
