{"version":3,"names":["petals","petal_size_in","petal_num_in","column_in","row_in","petals_roundy_spikiness_in","min","max","petal_size","cos","petal_num","atan2","column","row","petals_roundy_spikiness","sqrt","head","circle","x0_in","y0_in","r_in","x0","y0","r","face_eyes","face_mouth","abs","face","result","Math"],"sources":["flower.cul.js"],"sourcesContent":["// based on awesome \"Painting with Maths in Google Sheets\" by Inigo Quilez (https://iquilezles.org/)\n// https://www.youtube.com/watch?v=JnCkF62gkOY\n// his Google doc visual:\n// https://docs.google.com/spreadsheets/d/1zPtl4DpFRb-RANetrK4RrgSH-nuttDo6FdSgNiViKic/edit#gid=794943047\n\n// I migrated his formula(!) with very minor changes into result formula below\n// and then I split it into different meaningful bits\n// (petals, head, face) so I can visualize them seperately as I want.\n// I made some petal features customizable by inputs.\n// I also changed the eyes to be a composition of every high-schoolers equation of a circle (not smooth like everything else, but ok)\n\nexport const petals = () =>\n  min(\n    1,\n    max(\n      0,\n      20 +\n        petal_size() *\n          (0.5 +\n            0.5 * cos(petal_num() * atan2(column() - 50.5, row() - 50.5))) **\n            petals_roundy_spikiness() -\n        sqrt((column() - 50.5) ** 2 + (row() - 50.5) ** 2)\n    )\n  );\n\nexport const head = () =>\n  min(1, max(0, 19 - sqrt((column() - 50.5) ** 2 + (row() - 50.5) ** 2)));\n\nexport const circle = () => // used with inputs r_in, x0_in, y0_in below\n  (column() - x0()) ** 2 + (row() - y0()) ** 2 < r() ** 2;\n\n// I refactored eyes to use a circle function\n// I lost some smoothness but I gained some freaky eyes\nexport const face_eyes = () =>\n  2 *\n  (circle({ r_in: 4, x0_in: 45, y0_in: 45 }) -\n    circle({ r_in: 2, x0_in: 45, y0_in: 45 + 1 }) +\n    circle({ r_in: 4, x0_in: 55, y0_in: 45 }) -\n    circle({ r_in: 2, x0_in: 55, y0_in: 45 + 1 }));\n\nexport const face_mouth = () =>\n  2 *\n  min(1, max(0, row() - 50.5)) *\n  min(\n    1,\n    max(0, 2 - abs(8 - sqrt((column() - 50.5) ** 2 + (row() - 50.5) ** 2)))\n  );\n\nexport const face = () => face_eyes() + face_mouth();\n\nexport const result = () => petals() + head() + face();\n\n// just convenience stuff:\nlet cos = Math.cos;\nlet sqrt = Math.sqrt;\nlet abs = Math.abs;\nlet atan2 = Math.atan2;\nlet min = Math.min;\nlet max = Math.max;\n\n// inputs:\nexport const row = () => row_in;\nexport const column = () => column_in;\n\nexport const petal_size = () => petal_size_in;\nexport const petal_num = () => petal_num_in;\nexport const petals_roundy_spikiness = () => petals_roundy_spikiness_in;\n\n// for circle\nexport const x0 = () => x0_in;\nexport const y0 = () => y0_in;\nexport const r = () => r_in;"],"mappings":"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"}